name: Process-PSModule - CI

on:
  workflow_call:
    secrets:
      APIKey:
        description: The API key for the PowerShell Gallery.
        required: true
      TEST_APP_ENT_CLIENT_ID:
        description: The client ID of an Enterprise GitHub App for running tests.
        required: false
      TEST_APP_ENT_PRIVATE_KEY:
        description: The private key of an Enterprise GitHub App for running tests.
        required: false
      TEST_APP_ORG_CLIENT_ID:
        description: The client ID of an Organization GitHub App for running tests.
        required: false
      TEST_APP_ORG_PRIVATE_KEY:
        description: The private key of an Organization GitHub App for running tests.
        required: false
      TEST_USER_ORG_FG_PAT:
        description: The fine-grained personal access token with org access for running tests.
        required: false
      TEST_USER_USER_FG_PAT:
        description: The fine-grained personal access token with user account access for running tests.
        required: false
      TEST_USER_PAT:
        description: The classic personal access token for running tests.
        required: false
    inputs:
      Name:
        type: string
        description: The name of the module to process. Scripts default to the repository name if nothing is specified.
        required: false
      SkipTests:
        type: string
        description: Defines what types of tests to skip. Allowed values are 'All', 'SourceCode', 'Module', 'None', 'macOS', 'Windows', 'Linux'.
        required: false
        default: None
      Debug:
        type: boolean
        description: Enable debug output.
        required: false
        default: false
      Verbose:
        type: boolean
        description: Enable verbose output.
        required: false
        default: false
      Version:
        type: string
        description: Specifies the version of the GitHub module to be installed. The value must be an exact version.
        required: false
        default: ''
      Prerelease:
        type: boolean
        description: Whether to use a prerelease version of the 'GitHub' module.
        required: false
        default: false
      WorkingDirectory:
        type: string
        description: The working directory where the script will run from.
        required: false
        default: '.'

permissions:
  contents: read       # to checkout the repository
  pull-requests: write # to write comments to PRs
  statuses: write      # to update the status of the workflow from linter

jobs:
  Get-TestSuites:
    uses: ./.github/workflows/Get-TestSuites.yml
    with:
      SkipTests: ${{ inputs.SkipTests }}
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
      WorkingDirectory: ${{ inputs.WorkingDirectory }}

  Test-SourceCode:
    if: ${{ needs.Get-TestSuites.outputs.SourceCodeTestSuites != '[]' }}
    needs:
      - Get-TestSuites
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.Get-TestSuites.outputs.SourceCodeTestSuites) }}
    uses: ./.github/workflows/Test-SourceCode.yml
    with:
      RunsOn: ${{ matrix.RunsOn }}
      OS: ${{ matrix.OSName }}
      Name: ${{ inputs.Name }}
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
      WorkingDirectory: ${{ inputs.WorkingDirectory }}

  Build-Module:
    uses: ./.github/workflows/Build-Module.yml
    with:
      Name: ${{ inputs.Name }}
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
      WorkingDirectory: ${{ inputs.WorkingDirectory }}

  Build-Docs:
    needs:
      - Build-Module
    uses: ./.github/workflows/Build-Docs.yml
    with:
      Name: ${{ inputs.Name }}
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
      WorkingDirectory: ${{ inputs.WorkingDirectory }}

  Test-Module:
    if: ${{ needs.Build-Module.result == 'success' && !cancelled() && needs.Get-TestSuites.outputs.ModuleTestSuites != '[]' }}
    needs:
      - Build-Module
      - Get-TestSuites
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.Get-TestSuites.outputs.ModuleTestSuites) }}
    uses: ./.github/workflows/Test-Module.yml
    secrets: inherit
    with:
      RunsOn: ${{ matrix.RunsOn }}
      OS: ${{ matrix.OSName }}
      Name: ${{ inputs.Name }}
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
      WorkingDirectory: ${{ inputs.WorkingDirectory }}

  Test-ModuleLocal:
    if: ${{ needs.Build-Module.result == 'success' && !cancelled() && needs.Get-TestSuites.outputs.ModuleLocalTestSuites != '[]' }}
    needs:
      - Build-Module
      - Get-TestSuites
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.Get-TestSuites.outputs.ModuleLocalTestSuites) }}
    uses: ./.github/workflows/Test-ModuleLocal.yml
    secrets: inherit
    with:
      RunsOn: ${{ matrix.RunsOn }}
      OS: ${{ matrix.OSName }}
      Name: ${{ inputs.Name }}
      TestPath: ${{ matrix.TestPath }}
      TestName: ${{ matrix.TestName }}
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
      WorkingDirectory: ${{ inputs.WorkingDirectory }}

  Get-TestResults:
    if: always() && !cancelled()
    needs:
      - Test-SourceCode
      - Test-Module
      - Test-ModuleLocal
    uses: ./.github/workflows/Get-TestResults.yml
    secrets: inherit
    with:
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}

  Get-CodeCoverage:
    if: always() && !cancelled()
    needs:
      - Test-SourceCode
      - Test-Module
      - Test-ModuleLocal
    uses: ./.github/workflows/Get-CodeCoverage.yml
    secrets: inherit
    with:
      Debug: ${{ inputs.Debug }}
      Prerelease: ${{ inputs.Prerelease }}
      Verbose: ${{ inputs.Verbose }}
      Version: ${{ inputs.Version }}
