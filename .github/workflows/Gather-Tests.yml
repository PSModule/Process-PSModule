name: Gather-Tests

on:
  workflow_call:
    inputs:
      Path:
        type: string
        description: The path to the root of the repo.
        required: false
        default: ${{ github.workspace }}
      Debug:
        type: boolean
        description: Enable debug output.
        required: false
        default: false
      Verbose:
        type: boolean
        description: Enable verbose output.
        required: false
        default: false
      Version:
        type: string
        description: Specifies the version of the GitHub module to be installed. The value must be an exact version.
        required: false
        default: ''
      Prerelease:
        type: boolean
        description: Whether to use a prerelease version of the 'GitHub' module.
        required: false
        default: false
    outputs:
      TestSuites:
        description: The test suites to run.
        value: ${{ fromJson(jobs.Gather-Tests.outputs.TestSuites) }}

permissions:
  contents: read # to checkout the repo

jobs:
  Gather-Tests:
    name: Gather-Tests
    runs-on: ubuntu-latest
    outputs:
      TestSuites: ${{ steps.Gather-Tests.outputs.result }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Gather-Tests
        uses: PSModule/GitHub-Script@v1
        id: Gather-Tests
        with:
          ShowOutput: true
          Script: |
            $rootPath = Resolve-Path -Path '${{ inputs.Path }}'
            $testsPath = Join-Path -Path $rootPath -ChildPath 'tests'
            if (-not (Test-Path -Path $testsPath)) {
                Write-Host "No tests found"
                exit 0
            }

            $testSuites = @()
            Get-ChildItem -Path $testsPath -Directory | ForEach-Object {
                $filePath = $_.FullName
                'ubuntu-latest', 'macos-latest', 'windows-latest' | ForEach-Object {
                    $testSuites = @{
                        RunsOn = $_
                        FullName = $filePath
                    }
                }
            }
            if (-not $testSuites) {
                $testSuites += @($testsPath)
            }

            Write-Output ($testSuites | ConvertTo-Json -Depth 10)

            Set-GitHubOutput -Name TestSuites -Value ($testSuites | ConvertTo-Json -Depth 10)
