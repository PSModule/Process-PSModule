name: Test-ModuleLocal

on:
  workflow_call:
    secrets:
      TEST_APP_ENT_CLIENT_ID:
        description: The client ID of an Enterprise GitHub App for running tests.
        required: false
      TEST_APP_ENT_PRIVATE_KEY:
        description: The private key of an Enterprise GitHub App for running tests.
        required: false
      TEST_APP_ORG_CLIENT_ID:
        description: The client ID of an Organization GitHub App for running tests.
        required: false
      TEST_APP_ORG_PRIVATE_KEY:
        description: The private key of an Organization GitHub App for running tests.
        required: false
      TEST_USER_ORG_FG_PAT:
        description: The fine-grained personal access token with org access for running tests.
        required: false
      TEST_USER_USER_FG_PAT:
        description: The fine-grained personal access token with user account access for running tests.
        required: false
      TEST_USER_PAT:
        description: The classic personal access token for running tests.
        required: false
    inputs:
      RunsOn:
        type: string
        description: The type of runner to use for the job.
        required: true
      OS:
        type: string
        description: The operating system name.
        required: true
      Name:
        type: string
        description: The name of the module to process. Scripts default to the repository name if nothing is specified.
        required: false
      TestFolderPath:
        type: string
        description: The path to the tests folder.
        required: false
        default: tests
      TestName:
        type: string
        description: The path to the tests folder.
        required: false
        default: tests
      Path:
        type: string
        description: The path to the root of the repo.
        required: false
        default: ${{ github.workspace }}
      SkipTests:
        type: string
        description: Defines what types of tests to skip. Allowed values are 'All', 'SourceCode', 'Module', 'None', 'macOS', 'Windows', 'Linux'.
        required: false
        default: None
      Debug:
        type: boolean
        description: Enable debug output.
        required: false
        default: false
      Verbose:
        type: boolean
        description: Enable verbose output.
        required: false
        default: false
      Version:
        type: string
        description: Specifies the version of the GitHub module to be installed. The value must be an exact version.
        required: false
        default: ''
      Prerelease:
        type: boolean
        description: Whether to use a prerelease version of the 'GitHub' module.
        required: false
        default: false

env:
  TEST_APP_ENT_CLIENT_ID: ${{ secrets.TEST_APP_ENT_CLIENT_ID }}
  TEST_APP_ENT_PRIVATE_KEY: ${{ secrets.TEST_APP_ENT_PRIVATE_KEY }}
  TEST_APP_ORG_CLIENT_ID: ${{ secrets.TEST_APP_ORG_CLIENT_ID }}
  TEST_APP_ORG_PRIVATE_KEY: ${{ secrets.TEST_APP_ORG_PRIVATE_KEY }}
  TEST_USER_ORG_FG_PAT: ${{ secrets.TEST_USER_ORG_FG_PAT }}
  TEST_USER_USER_FG_PAT: ${{ secrets.TEST_USER_USER_FG_PAT }}
  TEST_USER_PAT: ${{ secrets.TEST_USER_PAT }}

permissions:
  contents: read # to checkout the repo and create releases on the repo

jobs:
  Test-ModuleLocal:
    name: ${{ inputs.TestName }}-${{ inputs.OS }}
    if: ${{ !(contains(inputs.SkipTests, 'All') || contains(inputs.SkipTests, 'Module') || contains(inputs.SkipTests, inputs.OS)) }}
    runs-on: ${{ inputs.RunsOn }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download module artifact
        uses: actions/download-artifact@v4
        with:
          name: module
          path: ${{ inputs.Path }}/outputs/module

      - name: Debug
        shell: pwsh
        run: |
          Get-ChildItem . -Recurse | Select-Object -ExpandProperty FullName | Sort-Object

      - name: Test-ModuleLocal
        uses: PSModule/Invoke-Pester@v3
        id: test
        with:
          Debug: ${{ inputs.Debug }}
          Prerelease: ${{ inputs.Prerelease }}
          Verbose: ${{ inputs.Verbose }}
          Version: ${{ inputs.Version }}
          TestResult_TestSuiteName: ${{ inputs.TestName }}-${{ inputs.OS }}
          TestResult_Enabled: true
          CodeCoverage_Enabled: true
          CodeCoverage_OutputFormat: JaCoCo
          Path: ${{ inputs.TestFolderPath }}
          Run_Path: ${{ inputs.Path }}/outputs/module

      - name: Failed test
        if: steps.test.outcome != 'success'
        shell: pwsh
        run: Write-Host "Complete successfully"
